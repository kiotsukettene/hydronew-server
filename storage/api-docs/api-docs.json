{
    "openapi": "3.0.0",
    "info": {
        "title": "Hydronew API Documentation",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "4827b9942de646e0319d3ae031b68f1c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "Momo"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Revillame"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "momo@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Password@123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully."
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "operationId": "11afae9c575f70626c5934b5ad5787f3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "momo@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Password@123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "422": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/v1/verify-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP",
                "operationId": "ffdf3b9b57c1b7281dad37591f0470af",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verified successfully"
                    },
                    "400": {
                        "description": "Verification code expired or invalid"
                    },
                    "403": {
                        "description": "Invalid token for verification"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/resend-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend OTP to user email",
                "operationId": "c58b7d8587a8037fbf7c048292f4ac9b",
                "responses": {
                    "201": {
                        "description": "OTP resent successfully"
                    },
                    "403": {
                        "description": "Invalid token"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "operationId": "230b5f3a37920e9b9d31a72b58e419bd",
                "responses": {
                    "200": {
                        "description": "Logout successful"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/forgot-password": {
            "post": {
                "tags": [
                    "Password Reset"
                ],
                "summary": "Send password reset code to email",
                "description": "Sends a 6-digit verification code to the user's email for password reset.",
                "operationId": "f32e6cd7fc0114012e2c3f9087114f2a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "momo@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset code sent to email"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "429": {
                        "description": "Too many requests (wait before requesting again)"
                    }
                }
            }
        },
        "/api/v1/verify-reset-code": {
            "post": {
                "tags": [
                    "Password Reset"
                ],
                "summary": "Verify reset code",
                "description": "Verifies the 6-digit reset code sent to the user's email and returns a temporary reset token.",
                "operationId": "ff7599b69186b8e9c430a3e44e4a144c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "code"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "momo@example.com"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Code verified successfully, reset token returned"
                    },
                    "400": {
                        "description": "Invalid or expired reset code"
                    }
                }
            }
        },
        "/api/v1/resend-reset-code": {
            "post": {
                "tags": [
                    "Password Reset"
                ],
                "summary": "Resend password reset code",
                "description": "Resends a new 6-digit password reset code to the user's email. Can only be used once every 60 seconds.",
                "operationId": "b84062d4187f7a7778339dc9393e3b5e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "momo@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "New reset code sent successfully"
                    },
                    "429": {
                        "description": "Please wait before requesting another code"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/reset-password": {
            "post": {
                "tags": [
                    "Password Reset"
                ],
                "summary": "Reset password",
                "description": "Sets a new password for the user using a valid reset token obtained from verify-reset-code endpoint.",
                "operationId": "bff4339c05df2e29fb2cf554d2fd24b3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "reset_token",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "momo@example.com"
                                    },
                                    "reset_token": {
                                        "type": "string",
                                        "example": "Xyz12345ResetTokenExample..."
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "NewPassword@123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully"
                    },
                    "400": {
                        "description": "Invalid or expired reset token"
                    },
                    "403": {
                        "description": "Reset token expired or invalid"
                    }
                }
            }
        },
        "/api/v1/dashboard": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get latest pH level and user greeting",
                "description": "Retrieves the most recent pH sensor reading and its status for the authenticated user.",
                "operationId": "bd63fc42d3e050ed07e66bab172398c7",
                "responses": {
                    "200": {
                        "description": "Latest pH reading fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "string",
                                            "example": "Hello, Marianne!"
                                        },
                                        "ph_level": {
                                            "properties": {
                                                "value": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 6.8
                                                },
                                                "unit": {
                                                    "type": "string",
                                                    "example": "pH"
                                                },
                                                "time": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-10-16T14:30:00Z"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "Optimal"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No pH sensor found"
                    },
                    "401": {
                        "description": "Unauthorized (missing or invalid token)"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Use the token obtained from the login endpoint. Example: 'Bearer {your_token}'",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Password Reset",
            "description": "Password Reset"
        },
        {
            "name": "Dashboard",
            "description": "Dashboard"
        }
    ]
}