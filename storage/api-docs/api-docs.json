{
    "openapi": "3.0.0",
    "info": {
        "title": "Hydronew API Documentation",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/manage-account": {
            "get": {
                "tags": [
                    "Account Settings"
                ],
                "summary": "Retrieve account information",
                "description": "Fetch the authenticated user's account details, including full name, email, and owned device count.",
                "operationId": "e07f25d3a0133f3c0bf81806a9bbdb2d",
                "responses": {
                    "200": {
                        "description": "Account details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "full_name": {
                                                    "type": "string",
                                                    "example": "Momo Revillame"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "momo@example.com"
                                                },
                                                "owned_devices_count": {
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/manage-account/{user}": {
            "put": {
                "tags": [
                    "Account Settings"
                ],
                "summary": "Update account information",
                "description": "Allows the authenticated user to update their personal information and profile picture.",
                "operationId": "ce2d2e54893346f29a1234bbacd39b44",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "Momo"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Revillame"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "Caloocan City, Philippines"
                                    },
                                    "profile_picture": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account updated successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "Momo"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Revillame"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "momo@example.com"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "Caloocan City, Philippines"
                                                },
                                                "profile_picture": {
                                                    "type": "string",
                                                    "example": "storage/profile_pictures/user1.png"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/manage-account/{user}/update-password": {
            "put": {
                "tags": [
                    "Account Settings"
                ],
                "summary": "Update account password",
                "description": "Allows the authenticated user to change their password by providing the current password and a new one.",
                "operationId": "256b2ca7476021a97a129e58ca7b31ba",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "new_password",
                                    "new_password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "example": "OldPass@123"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "example": "NewPass@456"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "example": "NewPass@456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Current password incorrect or validation failed"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/manage-account/login-history": {
            "get": {
                "tags": [
                    "Account Settings"
                ],
                "summary": "Retrieve login history",
                "description": "Fetch paginated login history for the authenticated user.",
                "operationId": "a99d860ad6d079d639afd85bb2c20ce8",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "ip_address": {
                                                                "type": "string",
                                                                "example": "192.168.1.12"
                                                            },
                                                            "user_agent": {
                                                                "type": "string",
                                                                "example": "Mozilla/5.0 (Windows NT 10.0; Win64; x64)"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-10-21T15:23:01Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 45
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "4827b9942de646e0319d3ae031b68f1c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "Momo"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Revillame"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "momo@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Password@123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "Password@123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully."
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "operationId": "11afae9c575f70626c5934b5ad5787f3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "momo@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Password@123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "422": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/v1/verify-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP",
                "operationId": "ffdf3b9b57c1b7281dad37591f0470af",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verified successfully"
                    },
                    "400": {
                        "description": "Verification code expired or invalid"
                    },
                    "403": {
                        "description": "Invalid token for verification"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/resend-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend OTP to user email",
                "operationId": "c58b7d8587a8037fbf7c048292f4ac9b",
                "responses": {
                    "201": {
                        "description": "OTP resent successfully"
                    },
                    "403": {
                        "description": "Invalid token"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "operationId": "230b5f3a37920e9b9d31a72b58e419bd",
                "responses": {
                    "200": {
                        "description": "Logout successful"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/forgot-password": {
            "post": {
                "tags": [
                    "Password Reset"
                ],
                "summary": "Send password reset code to email",
                "description": "Sends a 6-digit verification code to the user's email for password reset.",
                "operationId": "f32e6cd7fc0114012e2c3f9087114f2a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "momo@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset code sent to email"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "429": {
                        "description": "Too many requests (wait before requesting again)"
                    }
                }
            }
        },
        "/api/v1/verify-reset-code": {
            "post": {
                "tags": [
                    "Password Reset"
                ],
                "summary": "Verify reset code",
                "description": "Verifies the 6-digit reset code sent to the user's email and returns a temporary reset token.",
                "operationId": "ff7599b69186b8e9c430a3e44e4a144c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "code"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "momo@example.com"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Code verified successfully, reset token returned"
                    },
                    "400": {
                        "description": "Invalid or expired reset code"
                    }
                }
            }
        },
        "/api/v1/resend-reset-code": {
            "post": {
                "tags": [
                    "Password Reset"
                ],
                "summary": "Resend password reset code",
                "description": "Resends a new 6-digit password reset code to the user's email. Can only be used once every 60 seconds.",
                "operationId": "b84062d4187f7a7778339dc9393e3b5e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "momo@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "New reset code sent successfully"
                    },
                    "429": {
                        "description": "Please wait before requesting another code"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/reset-password": {
            "post": {
                "tags": [
                    "Password Reset"
                ],
                "summary": "Reset password",
                "description": "Sets a new password for the user using a valid reset token obtained from verify-reset-code endpoint.",
                "operationId": "bff4339c05df2e29fb2cf554d2fd24b3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "reset_token",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "momo@example.com"
                                    },
                                    "reset_token": {
                                        "type": "string",
                                        "example": "Xyz12345ResetTokenExample..."
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "NewPassword@123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully"
                    },
                    "400": {
                        "description": "Invalid or expired reset token"
                    },
                    "403": {
                        "description": "Reset token expired or invalid"
                    }
                }
            }
        },
        "/api/v1/dashboard": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get latest pH level and user greeting",
                "description": "Retrieves the most recent pH sensor reading and its status for the authenticated user.",
                "operationId": "bd63fc42d3e050ed07e66bab172398c7",
                "responses": {
                    "200": {
                        "description": "Latest pH reading fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "string",
                                            "example": "Hello, Marianne!"
                                        },
                                        "ph_level": {
                                            "properties": {
                                                "value": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 6.8
                                                },
                                                "unit": {
                                                    "type": "string",
                                                    "example": "pH"
                                                },
                                                "time": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-10-16T14:30:00Z"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "Optimal"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No pH sensor found"
                    },
                    "401": {
                        "description": "Unauthorized (missing or invalid token)"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/devices": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "summary": "List all associated devices for the authenticated user",
                "description": "Retrieves a list of devices owned by the authenticated user.",
                "operationId": "acc50b5ce2ff2709e2590ace9ff20ac7",
                "responses": {
                    "200": {
                        "description": "Devices retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "devices": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "HydroNew Device A-1"
                                                    },
                                                    "serial_number": {
                                                        "type": "string",
                                                        "example": "MFC-1204328HD0B45"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "connected"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No devices found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/devices/connect": {
            "post": {
                "tags": [
                    "Devices"
                ],
                "summary": "Connect a device to the authenticated user",
                "description": "Connects a device using its serial number to the logged-in user if it's not already connected.",
                "operationId": "372b60420b3bea7a02c2f31cec9f3571",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "serial_number"
                                ],
                                "properties": {
                                    "serial_number": {
                                        "type": "string",
                                        "example": "MFC-1204328HD0B45"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Device connected successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Device connected successfully."
                                        },
                                        "device": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "serial_number": {
                                                    "type": "string",
                                                    "example": "MFC-1204328HD0B45"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "connected"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Device not found"
                    },
                    "409": {
                        "description": "Device already connected to another user"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/devices/{device}/disconnect": {
            "post": {
                "tags": [
                    "Devices"
                ],
                "summary": "Disconnect a device from the authenticated user",
                "description": "Sets the device status to 'not connected'. Only the device owner can disconnect it.",
                "operationId": "b9f68649a66717229c8ed42a3ae878c9",
                "parameters": [
                    {
                        "name": "device",
                        "in": "path",
                        "description": "Device ID or serial number to disconnect",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "MFC-1204328HD0B45"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Device disconnected successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Device disconnected successfully."
                                        },
                                        "device": {
                                            "properties": {
                                                "serial_number": {
                                                    "type": "string",
                                                    "example": "MFC-1204328HD0B45"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "not connected"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You are not authorized to disconnect this device"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/hydroponic-setups": {
            "get": {
                "tags": [
                    "Hydroponic Setup"
                ],
                "summary": "Get all hydroponic setups for the authenticated user",
                "description": "Fetches a paginated list of hydroponic setups owned by the logged-in user.",
                "operationId": "getHydroponicSetups",
                "responses": {
                    "200": {
                        "description": "List of hydroponic setups",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 3
                                                            },
                                                            "crop_name": {
                                                                "type": "string",
                                                                "example": "Lettuce"
                                                            },
                                                            "number_of_crops": {
                                                                "type": "integer",
                                                                "example": 50
                                                            },
                                                            "bed_size": {
                                                                "type": "string",
                                                                "example": "medium"
                                                            },
                                                            "nutrient_solution": {
                                                                "type": "string",
                                                                "example": "AB Mix"
                                                            },
                                                            "target_ph_min": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 5.5
                                                            },
                                                            "target_ph_max": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 6.5
                                                            },
                                                            "target_tds_min": {
                                                                "type": "integer",
                                                                "example": 600
                                                            },
                                                            "target_tds_max": {
                                                                "type": "integer",
                                                                "example": 800
                                                            },
                                                            "water_amount": {
                                                                "type": "string",
                                                                "example": "100L"
                                                            },
                                                            "setup_date": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-10-21T04:00:00Z"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "active"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Hydroponic Setup"
                ],
                "summary": "Create a new hydroponic setup",
                "description": "Creates a new hydroponic setup for the authenticated user and automatically generates an initial yield record.",
                "operationId": "createHydroponicSetup",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "crop_name",
                                    "number_of_crops",
                                    "bed_size",
                                    "nutrient_solution",
                                    "target_ph_min",
                                    "target_ph_max",
                                    "target_tds_min",
                                    "target_tds_max",
                                    "water_amount"
                                ],
                                "properties": {
                                    "crop_name": {
                                        "type": "string",
                                        "example": "Lettuce"
                                    },
                                    "number_of_crops": {
                                        "type": "integer",
                                        "example": 50
                                    },
                                    "bed_size": {
                                        "type": "string",
                                        "enum": [
                                            "small",
                                            "medium",
                                            "large"
                                        ],
                                        "example": "medium"
                                    },
                                    "pump_config": {
                                        "type": "object",
                                        "example": {
                                            "pumpA": true,
                                            "pumpB": false
                                        }
                                    },
                                    "nutrient_solution": {
                                        "type": "string",
                                        "example": "AB Mix"
                                    },
                                    "target_ph_min": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 5.5
                                    },
                                    "target_ph_max": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 6.5
                                    },
                                    "target_tds_min": {
                                        "type": "integer",
                                        "example": 600
                                    },
                                    "target_tds_max": {
                                        "type": "integer",
                                        "example": 800
                                    },
                                    "water_amount": {
                                        "type": "string",
                                        "example": "100L"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Hydroponic setup created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Hydroponic setup created successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "crop_name": {
                                                    "type": "string",
                                                    "example": "Lettuce"
                                                },
                                                "bed_size": {
                                                    "type": "string",
                                                    "example": "medium"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "setup_date": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-10-21T04:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/hydroponics/yields": {
            "get": {
                "tags": [
                    "Hydroponic Yields"
                ],
                "summary": "List all hydroponic yields for the authenticated user",
                "description": "Retrieves all yield records from hydroponic setups belonging to the authenticated user.",
                "operationId": "getHydroponicYields",
                "responses": {
                    "200": {
                        "description": "List of hydroponic yields retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "hydroponic_setup_id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "harvest_status": {
                                                        "type": "string",
                                                        "example": "not_harvested"
                                                    },
                                                    "growth_stage": {
                                                        "type": "string",
                                                        "example": "seedling"
                                                    },
                                                    "health_status": {
                                                        "type": "string",
                                                        "example": "good"
                                                    },
                                                    "actual_yield": {
                                                        "type": "number",
                                                        "example": 12.5
                                                    },
                                                    "harvest_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-10-21T14:00:00Z"
                                                    },
                                                    "notes": {
                                                        "type": "string",
                                                        "example": "Healthy and uniform growth."
                                                    },
                                                    "system_generated": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated - user not logged in"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/hydroponics/yields/{setup}": {
            "get": {
                "tags": [
                    "Hydroponic Yields"
                ],
                "summary": "Get yield details for a specific hydroponic setup",
                "description": "Retrieves all yield records for a given hydroponic setup.",
                "operationId": "showHydroponicYield",
                "parameters": [
                    {
                        "name": "setup",
                        "in": "path",
                        "description": "The ID of the hydroponic setup",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hydroponic yield details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "hydroponic_setup_id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "growth_stage": {
                                                        "type": "string",
                                                        "example": "vegetative"
                                                    },
                                                    "health_status": {
                                                        "type": "string",
                                                        "example": "excellent"
                                                    },
                                                    "harvest_status": {
                                                        "type": "string",
                                                        "example": "not_harvested"
                                                    },
                                                    "system_generated": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Setup not found or no yields available"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/hydroponics/yields/{yield}/update-actual": {
            "put": {
                "tags": [
                    "Hydroponic Yields"
                ],
                "summary": "Update the actual yield for a harvest",
                "description": "Records the actual yield and marks it as harvested, including optional notes and automatic harvest date.",
                "operationId": "updateActualYield",
                "parameters": [
                    {
                        "name": "yield",
                        "in": "path",
                        "description": "The ID of the hydroponic yield record to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 7
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "actual_yield"
                                ],
                                "properties": {
                                    "actual_yield": {
                                        "description": "Actual yield amount",
                                        "type": "number",
                                        "example": 15.2
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Yield recorded after 60 days of growth."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Actual yield updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Actual yield and harvest date recorded successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "actual_yield": {
                                                    "type": "number",
                                                    "example": 15.2
                                                },
                                                "harvest_status": {
                                                    "type": "string",
                                                    "example": "harvested"
                                                },
                                                "harvest_date": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-10-21T14:00:00Z"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "example": "Yield recorded after 60 days of growth."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The actual_yield field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/water-monitoring": {
            "get": {
                "tags": [
                    "Water Quality"
                ],
                "summary": "Get latest water quality readings",
                "description": "Fetches the latest readings for pH, TDS, turbidity, water level, and EC sensors, then evaluates if the water is safe for plants.",
                "operationId": "getWaterQuality",
                "responses": {
                    "200": {
                        "description": "Successful response with latest readings and plant safety evaluation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "ph": {
                                                    "id": 1,
                                                    "reading_value": 7.2,
                                                    "reading_time": "2025-10-16T10:00:00Z",
                                                    "sensor": {
                                                        "type": "ph",
                                                        "unit": "pH"
                                                    }
                                                },
                                                "TDS": {
                                                    "id": 2,
                                                    "reading_value": 900,
                                                    "reading_time": "2025-10-16T10:00:00Z",
                                                    "sensor": {
                                                        "type": "TDS",
                                                        "unit": "ppm"
                                                    }
                                                },
                                                "turbidity": {
                                                    "id": 3,
                                                    "reading_value": 3,
                                                    "reading_time": "2025-10-16T10:00:00Z",
                                                    "sensor": {
                                                        "type": "turbidity",
                                                        "unit": "NTU"
                                                    }
                                                }
                                            }
                                        },
                                        "quality": {
                                            "type": "string",
                                            "example": "Safe for plants"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Bearer token missing or invalid"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Use the token obtained from the login endpoint. Example: 'Bearer {your_token}'",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Account Settings",
            "description": "Account Settings"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Password Reset",
            "description": "Password Reset"
        },
        {
            "name": "Dashboard",
            "description": "Dashboard"
        },
        {
            "name": "Devices",
            "description": "Devices"
        },
        {
            "name": "Hydroponic Setup",
            "description": "Hydroponic Setup"
        },
        {
            "name": "Hydroponic Yields",
            "description": "Hydroponic Yields"
        },
        {
            "name": "Water Quality",
            "description": "Water Quality"
        }
    ]
}